apply plugin: 'com.android.application'

android {
    compileSdkVersion project.compileSdkVersion
    buildToolsVersion project.buildToolsVersion

    
    defaultConfig {
        applicationId "io.github.loopX.XAlarm"
        minSdkVersion project.minSdkVersion
        targetSdkVersion project.targetSdkVersion
        versionCode 1
        versionName "1.0.0"

        vectorDrawables.useSupportLibrary = true

    }

    println "------------------ X Alarm --------------------- "

    
    def talkingDataAppId = ""
    def haveLoopXPros = false;
    Properties loopXProps  = new Properties()
    
    if (new File("LoopX.properties").exists()) {

        new File("LoopX.properties").withInputStream {
            stream -> loopXProps.load(stream)
        }
        
        talkingDataAppId = loopXProps['talkingDataAppId']
        haveLoopXPros = true;

        println "------------------ Reading 'LoopX.properties' succeed! --------------------- "
        println "------------------ talkingDataAppId: " + talkingDataAppId +  "--------------------- "

    }else {
        println "------------------ No 'LoopX.properties' file found! --------------------- "
    }
    
    if (haveLoopXPros){


        println "------------------ Do signing configs! --------------------- "
        println "------------------ keyAlias: " + loopXProps['keyAlias'] +  "--------------------- "
        println "------------------ keyPassword: " + loopXProps['keyPassword'] +  "--------------------- "
        println "------------------ storePassword: " + loopXProps['storePassword'] +  "--------------------- "
        
        signingConfigs {
            debug {
                println "------------------ Debug signing configs! --------------------- "
                
                keyAlias loopXProps['keyAlias']
                keyPassword loopXProps['keyPassword']
                storeFile file('LoopX.jks')
                storePassword loopXProps['storePassword']
            }

            release {
                println "------------------ Release signing configs! --------------------- "
                
                keyAlias loopXProps['keyAlias']
                keyPassword loopXProps['keyPassword']
                storeFile file('LoopX.jks')
                storePassword loopXProps['storePassword']
            }
        }
    }else {

        println "------------------ No signing configs! --------------------- "

        signingConfigs {
            release {
               
            }
        }
    }
    
    
    
    
    buildTypes {
        

        debug {
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false

            manifestPlaceholders = [TALKING_DATA_APP_ID: talkingDataAppId]
        }
        
        release {
            minifyEnabled false
            zipAlignEnabled true
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            
            if (haveLoopXPros){
                signingConfig signingConfigs.release
            }

            manifestPlaceholders = [TALKING_DATA_APP_ID: talkingDataAppId]
            
        }
    }

    productFlavors {
        
        

        self {
            manifestPlaceholders = [TALKING_DATA_APP_ID: talkingDataAppId]
            buildConfigField "String", "CHANNEL", "\"default\""
        }

     /*   googlePlay{
            manifestPlaceholders = [TALKING_DATA_APP_ID: talkingDataAppId]
            buildConfigField "String", "CHANNEL", "\"play.google.com\""
        }*/
        
        
        meizu{
            buildConfigField "String", "TALKING_DATA_ID", "\"$talkingDataAppId\""
            buildConfigField "String", "CHANNEL", "\"meizu\""
        }
        
        smartisan{
            buildConfigField "String", "TALKING_DATA_ID", "\"$talkingDataAppId\""
            buildConfigField "String", "CHANNEL", "\"smartisan\""
        }
        
        _360{
            buildConfigField "String", "TALKING_DATA_ID", "\"$talkingDataAppId\""
            buildConfigField "String", "CHANNEL", "\"360市场\""
        }

        xiaomi{
            buildConfigField "String", "TALKING_DATA_ID", "\"$talkingDataAppId\""
            buildConfigField "String", "CHANNEL", "\"xiaomi\""
        }

        yingyongbao{
            buildConfigField "String", "TALKING_DATA_ID", "\"$talkingDataAppId\""
            buildConfigField "String", "CHANNEL", "\"yingyongbao\""
        }
    }
    
    
    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:24.2.1'
    compile 'com.android.support:support-v4:24.2.1'
    compile 'com.android.support:design:24.2.1'
    compile 'com.facebook.rebound:rebound:0.3.8'
    compile 'com.kyleduo.switchbutton:library:1.4.1'
    compile project(':wheelviewLibrary')
    compile files('lib/TalkingData_Analytics_Android_SDK_V2.2.37.jar')
    //  compile files('lib/TalkingData_Analytics_Android_SDK_GP_V2.2.37.jar')
}
